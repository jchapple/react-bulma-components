{"version":3,"sources":["../../../src/components/notification/notification.js"],"names":["colors","concat","Object","keys","CONSTANTS","COLORS","map","key","Notification","React","forwardRef","ref","children","className","color","props","propTypes","modifiers","PropTypes","node","string","style","shape","renderAs","oneOfType","func","oneOf","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAG,CAAC,IAAD,EAAOC,MAAP,CAAcC,MAAM,CAACC,IAAP,CAAYC,mBAAUC,MAAtB,EAA8BC,GAA9B,CAAkC,UAAAC,GAAG;AAAA,SAAIH,mBAAUC,MAAV,CAAiBE,GAAjB,CAAJ;AAAA,CAArC,CAAd,CAAf;;AAEA,IAAMC,YAAY,GAAGC,eAAMC,UAAN,CAAiB,gBAKnCC,GALmC;AAAA,MACpCC,QADoC,QACpCA,QADoC;AAAA,MAEpCC,SAFoC,QAEpCA,SAFoC;AAAA,MAGpCC,KAHoC,QAGpCA,KAHoC;AAAA,MAIjCC,KAJiC;;AAAA,SAMpC,6BAAC,gBAAD,eACMA,KADN;AAEE,IAAA,GAAG,EAAEJ,GAFP;AAGE,IAAA,SAAS,EAAE,0BAAW,cAAX,mCACFG,KADE,GACQA,KADR,GAERD,SAFQ;AAHb,MAOGD,QAPH,CANoC;AAAA,CAAjB,CAArB;;AAiBAJ,YAAY,CAACQ,SAAb,qBACKC,mBAAUD,SADf;AAEEJ,EAAAA,QAAQ,EAAEM,mBAAUC,IAFtB;AAGEN,EAAAA,SAAS,EAAEK,mBAAUE,MAHvB;AAIEC,EAAAA,KAAK,EAAEH,mBAAUI,KAAV,CAAgB,EAAhB,CAJT;AAKEC,EAAAA,QAAQ,EAAEL,mBAAUM,SAAV,CAAoB,CAACN,mBAAUE,MAAX,EAAmBF,mBAAUO,IAA7B,CAApB,CALZ;AAMEX,EAAAA,KAAK,EAAEI,mBAAUQ,KAAV,CAAgB1B,MAAhB;AANT;AASAQ,YAAY,CAACmB,YAAb,qBACKV,mBAAUU,YADf;AAEEf,EAAAA,QAAQ,EAAE,IAFZ;AAGEC,EAAAA,SAAS,EAAE,EAHb;AAIEQ,EAAAA,KAAK,EAAE,EAJT;AAKEE,EAAAA,QAAQ,EAAE,KALZ;AAMET,EAAAA,KAAK,EAAE;AANT;eASeN,Y","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport CONSTANTS from '../../constants';\nimport modifiers from '../../modifiers';\nimport Element from '../element';\n\nconst colors = [null].concat(Object.keys(CONSTANTS.COLORS).map(key => CONSTANTS.COLORS[key]));\n\nconst Notification = React.forwardRef(({\n  children,\n  className,\n  color,\n  ...props\n}, ref) => (\n  <Element\n    {...props}\n    ref={ref}\n    className={classnames('notification', {\n      [`is-${color}`]: color,\n    }, className)}\n  >\n    {children}\n  </Element>\n));\n\nNotification.propTypes = {\n  ...modifiers.propTypes,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  renderAs: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  color: PropTypes.oneOf(colors),\n};\n\nNotification.defaultProps = {\n  ...modifiers.defaultProps,\n  children: null,\n  className: '',\n  style: {},\n  renderAs: 'div',\n  color: null,\n};\n\nexport default Notification;\n"],"file":"notification.js"}