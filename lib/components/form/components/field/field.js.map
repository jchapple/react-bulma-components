{"version":3,"sources":["../../../../../src/components/form/components/field/field.js"],"names":["Field","className","align","multiline","horizontal","kind","props","k","Label","FieldLabel","Body","FieldBody","propTypes","modifiers","children","PropTypes","node","string","style","shape","renderAs","oneOfType","func","oneOf","bool","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,OAOR;AAAA;;AAAA,MANJC,SAMI,QANJA,SAMI;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,UAGI,QAHJA,UAGI;AAAA,MAFJC,IAEI,QAFJA,IAEI;AAAA,MADDC,KACC;;AACJ,MAAIC,CAAC,GAAG,IAAR;;AAEA,MAAIF,IAAI,KAAK,QAAb,EAAuB;AACrBE,IAAAA,CAAC,GAAG,YAAJ;AACD,GAFD,MAEO,IAAIF,IAAI,KAAK,OAAb,EAAsB;AAC3BE,IAAAA,CAAC,GAAG,YAAJ;AACD;;AAED,SACE,6BAAC,gBAAD,eACMD,KADN;AAEE,IAAA,SAAS,EAAE,0BAAW,OAAX,EAAoBL,SAApB,4DACLM,CADK,GACCA,CADD,0CAELA,CAFK,cAEAL,KAFA,GAEUK,CAAC,IAAIL,KAFf,0CAGLK,CAHK,iBAGWA,CAAC,KAAK,YAAN,IAAsBJ,SAHjC,gCAIT,eAJS,EAIQC,UAJR;AAFb,KADF;AAWD,CA3BD;;AA6BAJ,KAAK,CAACQ,KAAN,GAAcC,mBAAd;AAEAT,KAAK,CAACU,IAAN,GAAaC,kBAAb;AAEAX,KAAK,CAACY,SAAN,qBACKC,mBAAUD,SADf;AAEEE,EAAAA,QAAQ,EAAEC,mBAAUC,IAFtB;AAGEf,EAAAA,SAAS,EAAEc,mBAAUE,MAHvB;AAIEC,EAAAA,KAAK,EAAEH,mBAAUI,KAAV,CAAgB,EAAhB,CAJT;AAKEC,EAAAA,QAAQ,EAAEL,mBAAUM,SAAV,CAAoB,CAACN,mBAAUE,MAAX,EAAmBF,mBAAUO,IAA7B,CAApB,CALZ;AAMEpB,EAAAA,KAAK,EAAEa,mBAAUQ,KAAV,CAAgB,CAAC,UAAD,EAAa,OAAb,CAAhB,CANT;AAOElB,EAAAA,IAAI,EAAEU,mBAAUQ,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,CAAhB,CAPR;AAQEpB,EAAAA,SAAS,EAAEY,mBAAUS,IARvB;AASEpB,EAAAA,UAAU,EAAEW,mBAAUS;AATxB;AAYAxB,KAAK,CAACyB,YAAN,qBACKZ,mBAAUY,YADf;AAEEX,EAAAA,QAAQ,EAAE,IAFZ;AAGEb,EAAAA,SAAS,EAAE,EAHb;AAIEiB,EAAAA,KAAK,EAAE,EAJT;AAKEE,EAAAA,QAAQ,EAAE,KALZ;AAMElB,EAAAA,KAAK,EAAE,IANT;AAOEG,EAAAA,IAAI,EAAE,IAPR;AAQEF,EAAAA,SAAS,EAAE,KARb;AASEC,EAAAA,UAAU,EAAE;AATd;eAYeJ,K","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport FieldLabel from './field-label';\nimport FieldBody from './field-body';\nimport modifiers from '../../../../modifiers';\nimport Element from '../../../element';\n\nconst Field = ({\n  className,\n  align,\n  multiline,\n  horizontal,\n  kind,\n  ...props\n}) => {\n  let k = null;\n\n  if (kind === 'addons') {\n    k = 'has-addons';\n  } else if (kind === 'group') {\n    k = 'is-grouped';\n  }\n\n  return (\n    <Element\n      {...props}\n      className={classnames('field', className, {\n        [`${k}`]: k,\n        [`${k}-${align}`]: k && align,\n        [`${k}-multiline`]: k === 'is-grouped' && multiline,\n        'is-horizontal': horizontal,\n      })}\n    />\n  );\n};\n\nField.Label = FieldLabel;\n\nField.Body = FieldBody;\n\nField.propTypes = {\n  ...modifiers.propTypes,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  renderAs: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  align: PropTypes.oneOf(['centered', 'right']),\n  kind: PropTypes.oneOf(['addons', 'group']),\n  multiline: PropTypes.bool,\n  horizontal: PropTypes.bool,\n};\n\nField.defaultProps = {\n  ...modifiers.defaultProps,\n  children: null,\n  className: '',\n  style: {},\n  renderAs: 'div',\n  align: null,\n  kind: null,\n  multiline: false,\n  horizontal: false,\n};\n\nexport default Field;\n"],"file":"field.js"}