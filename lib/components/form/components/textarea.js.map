{"version":3,"sources":["../../../../src/components/form/components/textarea.js"],"names":["colors","concat","Object","keys","CONSTANTS","COLORS","map","key","Textarea","React","forwardRef","ref","className","size","color","readOnly","disabled","placeholder","rows","value","name","allProps","props","modifiers","clean","classnames","propTypes","PropTypes","string","style","shape","oneOf","bool","number","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAG,CAAC,IAAD,EAAOC,MAAP,CAAcC,MAAM,CAACC,IAAP,CAAYC,mBAAUC,MAAtB,EAA8BC,GAA9B,CAAkC,UAAAC,GAAG;AAAA,SAAIH,mBAAUC,MAAV,CAAiBE,GAAjB,CAAJ;AAAA,CAArC,CAAd,CAAf;;AAEA,IAAMC,QAAQ,GAAGC,eAAMC,UAAN,CAAiB,gBAW/BC,GAX+B,EAWvB;AAAA;;AAAA,MAVTC,SAUS,QAVTA,SAUS;AAAA,MATTC,IASS,QATTA,IASS;AAAA,MARTC,KAQS,QARTA,KAQS;AAAA,MAPTC,QAOS,QAPTA,QAOS;AAAA,MANTC,QAMS,QANTA,QAMS;AAAA,MALTC,WAKS,QALTA,WAKS;AAAA,MAJTC,IAIS,QAJTA,IAIS;AAAA,MAHTC,KAGS,QAHTA,KAGS;AAAA,MAFTC,IAES,QAFTA,IAES;AAAA,MADNC,QACM;;AACT,MAAMC,KAAK,GAAGC,mBAAUC,KAAV,CAAgBH,QAAhB,CAAd;;AACA,SACE;AACE,IAAA,IAAI,EAAED;AADR,KAEME,KAFN;AAGE,IAAA,GAAG,EAAEX,GAHP;AAIE,IAAA,KAAK,EAAEQ,KAJT;AAKE,IAAA,IAAI,EAAED,IALR;AAME,IAAA,WAAW,EAAED,WANf;AAOE,IAAA,QAAQ,EAAEF,QAPZ;AAQE,IAAA,QAAQ,EAAEC,QARZ;AASE,IAAA,SAAS,EAAE,0BAAW,UAAX,EAAuBO,mBAAUE,UAAV,CAAqBJ,QAArB,CAAvB,EAAuDT,SAAvD,+DACFC,IADE,GACOA,IADP,6CAEFC,KAFE,GAEQA,KAFR;AATb,KADF;AAgBD,CA7BgB,CAAjB;;AA+BAN,QAAQ,CAACkB,SAAT,qBACKH,mBAAUG,SADf;AAEEd,EAAAA,SAAS,EAAEe,mBAAUC,MAFvB;AAGEC,EAAAA,KAAK,EAAEF,mBAAUG,KAAV,CAAgB,EAAhB,CAHT;AAIEjB,EAAAA,IAAI,EAAEc,mBAAUI,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CAJR;AAKEjB,EAAAA,KAAK,EAAEa,mBAAUI,KAAV,CAAgB/B,MAAhB,CALT;AAMEe,EAAAA,QAAQ,EAAEY,mBAAUK,IANtB;AAOEhB,EAAAA,QAAQ,EAAEW,mBAAUK,IAPtB;AAQEf,EAAAA,WAAW,EAAEU,mBAAUC,MARzB;AASEV,EAAAA,IAAI,EAAES,mBAAUM,MATlB;AAUEd,EAAAA,KAAK,EAAEQ,mBAAUC,MAVnB;;AAWE;;;AAGAR,EAAAA,IAAI,EAAEO,mBAAUC;AAdlB;AAiBApB,QAAQ,CAAC0B,YAAT,qBACKX,mBAAUW,YADf;AAEEtB,EAAAA,SAAS,EAAE,EAFb;AAGEiB,EAAAA,KAAK,EAAE,EAHT;AAIEhB,EAAAA,IAAI,EAAE,IAJR;AAKEC,EAAAA,KAAK,EAAE,IALT;AAMEC,EAAAA,QAAQ,EAAE,KANZ;AAOEC,EAAAA,QAAQ,EAAE,KAPZ;AAQEC,EAAAA,WAAW,EAAE,EARf;AASEC,EAAAA,IAAI,EAAE,CATR;AAUEC,EAAAA,KAAK,EAAE,EAVT;AAWEC,EAAAA,IAAI,EAAE;AAXR;eAceZ,Q","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport modifiers from '../../../modifiers';\n\nimport CONSTANTS from '../../../constants';\n\nconst colors = [null].concat(Object.keys(CONSTANTS.COLORS).map(key => CONSTANTS.COLORS[key]));\n\nconst Textarea = React.forwardRef(({\n  className,\n  size,\n  color,\n  readOnly,\n  disabled,\n  placeholder,\n  rows,\n  value,\n  name,\n  ...allProps\n}, ref) => {\n  const props = modifiers.clean(allProps);\n  return (\n    <textarea\n      name={name}\n      {...props}\n      ref={ref}\n      value={value}\n      rows={rows}\n      placeholder={placeholder}\n      readOnly={readOnly}\n      disabled={disabled}\n      className={classnames('textarea', modifiers.classnames(allProps), className, {\n        [`is-${size}`]: size,\n        [`is-${color}`]: color,\n      })}\n    />\n  );\n});\n\nTextarea.propTypes = {\n  ...modifiers.propTypes,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  color: PropTypes.oneOf(colors),\n  readOnly: PropTypes.bool,\n  disabled: PropTypes.bool,\n  placeholder: PropTypes.string,\n  rows: PropTypes.number,\n  value: PropTypes.string,\n  /**\n   * The name of the input field Commonly used for [multi-input handling](https://reactjs.org/docs/forms.html#handling-multiple-inputs)\n   */\n  name: PropTypes.string,\n};\n\nTextarea.defaultProps = {\n  ...modifiers.defaultProps,\n  className: '',\n  style: {},\n  size: null,\n  color: null,\n  readOnly: false,\n  disabled: false,\n  placeholder: '',\n  rows: 4,\n  value: '',\n  name: '',\n};\n\nexport default Textarea;\n"],"file":"textarea.js"}