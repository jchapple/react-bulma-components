{"version":3,"sources":["../../../../src/components/form/components/input-file.js"],"names":["colors","concat","Object","keys","CONSTANTS","COLORS","map","key","InputFile","state","filename","undefined","select","event","files","target","setState","length","name","props","onChange","className","style","color","size","fileName","fullwidth","right","boxed","label","icon","PureComponent","propTypes","modifiers","PropTypes","string","shape","func","oneOf","bool","element","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Element from '../../element';\nimport modifiers from '../../../modifiers';\n\nimport CONSTANTS from '../../../constants';\n\nconst colors = [null].concat(Object.keys(CONSTANTS.COLORS).map(key => CONSTANTS.COLORS[key]));\n\nexport default class InputFile extends PureComponent {\n  static propTypes = {\n    ...modifiers.propTypes,\n    className: PropTypes.string,\n    style: PropTypes.shape({}),\n    onChange: PropTypes.func,\n    color: PropTypes.oneOf(colors),\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n    fileName: PropTypes.bool,\n    fullwidth: PropTypes.bool,\n    right: PropTypes.bool,\n    boxed: PropTypes.bool,\n    /**\n     * The name of the input field Commonly used for [multi-input handling](https://reactjs.org/docs/forms.html#handling-multiple-inputs)\n     */\n    name: PropTypes.string,\n    label: PropTypes.string,\n    icon: PropTypes.element,\n  }\n\n  static defaultProps = {\n    ...modifiers.defaultProps,\n    className: undefined,\n    style: undefined,\n    onChange: () => {},\n    color: undefined,\n    size: undefined,\n    fileName: true,\n    fullwidth: undefined,\n    right: undefined,\n    boxed: undefined,\n    name: undefined,\n    icon: undefined,\n    label: 'Choose a file...',\n  }\n\n  state = {\n    filename: undefined,\n  }\n\n  select = (event) => {\n    const { files } = event.target;\n    this.setState({\n      filename: files.length > 0 ? files[0].name : undefined,\n    });\n    if (this.props.onChange) {\n      this.props.onChange(event);\n    }\n  }\n\n  render() {\n    const {\n      className,\n      style,\n      onChange,\n      color,\n      size,\n      fileName,\n      fullwidth,\n      right,\n      boxed,\n      name,\n      label,\n      icon,\n      ...props\n    } = this.props;\n\n    const { filename } = this.state;\n\n    return (\n      <Element\n        style={style}\n        className={classnames('file', className, {\n          [`is-${size}`]: size,\n          [`is-${color}`]: color,\n          'has-name': !fileName,\n          'is-right': right,\n          'is-boxed': boxed,\n          'is-fullwidth': fullwidth,\n        })}\n      >\n        <label className=\"file-label\">\n          <input\n            {...props}\n            name={name}\n            value=\"\"\n            type=\"file\"\n            className=\"file-input\"\n            onChange={this.select}\n          />\n          <span className=\"file-cta\">\n            {\n              icon && (\n                <span className=\"file-icon\">\n                  {icon}\n                </span>\n              )\n            }\n            <span className=\"file-label\">\n              {label}\n            </span>\n          </span>\n          {fileName && filename\n            && (\n            <span className=\"file-name\">\n              {filename}\n            </span>\n            )\n          }\n        </label>\n      </Element>\n    );\n  }\n}\n"],"file":"input-file.js"}