{"version":3,"sources":["../../../../../src/components/form/components/__test__/input.test.js"],"names":["describe","it","expect","Input","toMatchSnapshot","component","renderer","create","toJSON","height"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,QAAQ,CAAC,iBAAD,EAAoB,YAAM;AAChCC,EAAAA,EAAE,CAAC,cAAD,EAAiB,YAAM;AACvBC,IAAAA,MAAM,CAACC,cAAD,CAAN,CAAcC,eAAd;AACD,GAFC,CAAF;AAGAH,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAM;AACtC,QAAMI,SAAS,GAAGC,2BAASC,MAAT,CAAgB,6BAAC,cAAD,OAAhB,CAAlB;;AACAL,IAAAA,MAAM,CAACG,SAAS,CAACG,MAAV,EAAD,CAAN,CAA2BJ,eAA3B;AACD,GAHC,CAAF;AAIAH,EAAAA,EAAE,CAAC,uDAAD,EAA0D,YAAM;AAChE,QAAMI,SAAS,GAAGC,2BAASC,MAAT,CAAgB,6BAAC,cAAD;AAAO,MAAA,SAAS,EAAC;AAAjB,MAAhB,CAAlB;;AACAL,IAAAA,MAAM,CAACG,SAAS,CAACG,MAAV,EAAD,CAAN,CAA2BJ,eAA3B;AACD,GAHC,CAAF;AAIAH,EAAAA,EAAE,CAAC,0BAAD,EAA6B,YAAM;AACnC,QAAMI,SAAS,GAAGC,2BAASC,MAAT,CAAgB,6BAAC,cAAD;AAAO,MAAA,KAAK,EAAE;AAAEE,QAAAA,MAAM,EAAE;AAAV;AAAd,MAAhB,CAAlB;;AACAP,IAAAA,MAAM,CAACG,SAAS,CAACG,MAAV,EAAD,CAAN,CAA2BJ,eAA3B;AACD,GAHC,CAAF;AAIAH,EAAAA,EAAE,CAAC,gDAAD,EAAmD,YAAM;AACzD,QAAMI,SAAS,GAAGC,2BAASC,MAAT,CAAgB,6BAAC,cAAD;AAAO,MAAA,KAAK,EAAC,SAAb;AAAuB,MAAA,IAAI,EAAC;AAA5B,MAAhB,CAAlB;;AACAL,IAAAA,MAAM,CAACG,SAAS,CAACG,MAAV,EAAD,CAAN,CAA2BJ,eAA3B;AACD,GAHC,CAAF;AAIAH,EAAAA,EAAE,CAAC,8BAAD,EAAiC,YAAM;AACvC,QAAMI,SAAS,GAAGC,2BAASC,MAAT,CAAgB,6BAAC,cAAD;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,IAAI,EAAC;AAArB,MAAhB,CAAlB;;AACAL,IAAAA,MAAM,CAACG,SAAS,CAACG,MAAV,EAAD,CAAN,CAA2BJ,eAA3B;AACD,GAHC,CAAF;AAIAH,EAAAA,EAAE,CAAC,+CAAD,EAAkD,YAAM;AACxD,QAAMI,SAAS,GAAGC,2BAASC,MAAT,CAAgB,6BAAC,cAAD;AAAO,MAAA,KAAK,EAAC,MAAb;AAAoB,MAAA,QAAQ,MAA5B;AAA6B,MAAA,WAAW,EAAC;AAAzC,MAAhB,CAAlB;;AACAL,IAAAA,MAAM,CAACG,SAAS,CAACG,MAAV,EAAD,CAAN,CAA2BJ,eAA3B;AACD,GAHC,CAAF;AAID,CA5BO,CAAR","sourcesContent":["import React from 'react';\nimport renderer from 'react-test-renderer';\nimport Input from '../input';\n\ndescribe('Input component', () => {\n  it('Should exist', () => {\n    expect(Input).toMatchSnapshot();\n  });\n  it('Should have input classname', () => {\n    const component = renderer.create(<Input />);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should concat classname in props with Bulma classname', () => {\n    const component = renderer.create(<Input className=\"other-class this-is-a-test\" />);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should use inline styles', () => {\n    const component = renderer.create(<Input style={{ height: 250 }} />);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should be type email and a with success colors', () => {\n    const component = renderer.create(<Input color=\"success\" type=\"email\" />);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should be large and readOnly', () => {\n    const component = renderer.create(<Input readOnly size=\"large\" />);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should be disabled with placeholder and value', () => {\n    const component = renderer.create(<Input value=\"TEST\" disabled placeholder=\"hello tests\" />);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n});\n"],"file":"input.test.js"}