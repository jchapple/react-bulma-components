{"version":3,"sources":["../../../../../src/components/form/components/__test__/field.test.js"],"names":["describe","it","expect","Field","toMatchSnapshot","Label","Body","component","renderer","create","toJSON"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,QAAQ,CAAC,iBAAD,EAAoB,YAAM;AAChCC,EAAAA,EAAE,CAAC,eAAD,EAAkB,YAAM;AACxBC,IAAAA,MAAM,CAACC,cAAD,CAAN,CAAcC,eAAd;AACD,GAFC,CAAF;AAGAH,EAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAM;AAC5DC,IAAAA,MAAM,CAACC,eAAME,KAAP,CAAN,CAAoBD,eAApB;AACAF,IAAAA,MAAM,CAACC,eAAMG,IAAP,CAAN,CAAmBF,eAAnB;AACD,GAHC,CAAF;AAIAH,EAAAA,EAAE,CAAC,6BAAD,EAAgC,YAAM;AACtC,QAAMM,SAAS,GAAGC,2BAASC,MAAT,CAChB,6BAAC,cAAD,QACE;AAAG,MAAA,SAAS,EAAC;AAAb,OACE,kDADF,EAIE,oDAJF,CADF,CADgB,CAAlB;;AAWAP,IAAAA,MAAM,CAACK,SAAS,CAACG,MAAV,EAAD,CAAN,CAA2BN,eAA3B;AACD,GAbC,CAAF;AAcAH,EAAAA,EAAE,CAAC,mCAAD,EAAsC,YAAM;AAC5C,QAAMM,SAAS,GAAGC,2BAASC,MAAT,CAChB,6BAAC,cAAD,CAAO,KAAP,QACE;AAAG,MAAA,SAAS,EAAC;AAAb,OACE,kDADF,EAIE,oDAJF,CADF,CADgB,CAAlB;;AAWAP,IAAAA,MAAM,CAACK,SAAS,CAACG,MAAV,EAAD,CAAN,CAA2BN,eAA3B;AACD,GAbC,CAAF;AAcAH,EAAAA,EAAE,CAAC,kCAAD,EAAqC,YAAM;AAC3C,QAAMM,SAAS,GAAGC,2BAASC,MAAT,CAChB,6BAAC,cAAD,CAAO,IAAP,QACE;AAAG,MAAA,SAAS,EAAC;AAAb,OACE,kDADF,EAIE,oDAJF,CADF,CADgB,CAAlB;;AAWAP,IAAAA,MAAM,CAACK,SAAS,CAACG,MAAV,EAAD,CAAN,CAA2BN,eAA3B;AACD,GAbC,CAAF;AAcAH,EAAAA,EAAE,CAAC,oDAAD,EAAuD,YAAM;AAC7D,QAAMM,SAAS,GAAGC,2BAASC,MAAT,CAChB,6BAAC,cAAD;AAAO,MAAA,IAAI,EAAC;AAAZ,OACE;AAAG,MAAA,SAAS,EAAC;AAAb,OACE,kDADF,EAIE,oDAJF,CADF,CADgB,CAAlB;;AAWAP,IAAAA,MAAM,CAACK,SAAS,CAACG,MAAV,EAAD,CAAN,CAA2BN,eAA3B;AACD,GAbC,CAAF;AAcAH,EAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAM;AAC5D,QAAMM,SAAS,GAAGC,2BAASC,MAAT,CAChB,6BAAC,cAAD;AAAO,MAAA,IAAI,EAAC;AAAZ,OACE;AAAG,MAAA,SAAS,EAAC;AAAb,OACE,kDADF,EAIE,oDAJF,CADF,CADgB,CAAlB;;AAWAP,IAAAA,MAAM,CAACK,SAAS,CAACG,MAAV,EAAD,CAAN,CAA2BN,eAA3B;AACD,GAbC,CAAF;AAcD,CA9EO,CAAR","sourcesContent":["import React from 'react';\nimport renderer from 'react-test-renderer';\nimport Field from '../field';\n\ndescribe('Field component', () => {\n  it('Should Exists', () => {\n    expect(Field).toMatchSnapshot();\n  });\n  it('Should export Label and Body as static properties', () => {\n    expect(Field.Label).toMatchSnapshot();\n    expect(Field.Body).toMatchSnapshot();\n  });\n  it('Should have field classname', () => {\n    const component = renderer.create(\n      <Field>\n        <p className=\"bd-notification is-success\">\n          <p>\nDefault\n          </p>\n          <p>\nContainer\n          </p>\n        </p>\n      </Field>);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should have field-label classname', () => {\n    const component = renderer.create(\n      <Field.Label>\n        <p className=\"bd-notification is-success\">\n          <p>\nDefault\n          </p>\n          <p>\nContainer\n          </p>\n        </p>\n      </Field.Label>);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should have field-body classname', () => {\n    const component = renderer.create(\n      <Field.Body>\n        <p className=\"bd-notification is-success\">\n          <p>\nDefault\n          </p>\n          <p>\nContainer\n          </p>\n        </p>\n      </Field.Body>);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should have field classname with grouped classname', () => {\n    const component = renderer.create(\n      <Field kind=\"group\">\n        <p className=\"bd-notification is-success\">\n          <p>\nDefault\n          </p>\n          <p>\nContainer\n          </p>\n        </p>\n      </Field>);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should have field classname with addons classname', () => {\n    const component = renderer.create(\n      <Field kind=\"addons\">\n        <p className=\"bd-notification is-success\">\n          <p>\nDefault\n          </p>\n          <p>\nContainer\n          </p>\n        </p>\n      </Field>);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n});\n"],"file":"field.test.js"}