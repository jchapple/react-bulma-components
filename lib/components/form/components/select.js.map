{"version":3,"sources":["../../../../src/components/form/components/select.js"],"names":["colors","concat","Object","keys","CONSTANTS","COLORS","map","key","Select","React","forwardRef","ref","className","style","size","color","loading","readOnly","disabled","value","multiple","children","name","allProps","props","modifiers","clean","classnames","propTypes","PropTypes","node","string","shape","oneOf","bool","oneOfType","number","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport modifiers from '../../../modifiers';\nimport CONSTANTS from '../../../constants';\n\nconst colors = [null].concat(Object.keys(CONSTANTS.COLORS).map(key => CONSTANTS.COLORS[key]));\n\nconst Select = React.forwardRef(({\n  className,\n  style,\n  size,\n  color,\n  loading,\n  readOnly,\n  disabled,\n  value,\n  multiple,\n  children,\n  name,\n  ...allProps\n}, ref) => {\n  const props = modifiers.clean(allProps);\n  return (\n    <div\n      className={classnames('select', modifiers.classnames(allProps), className, {\n        [`is-${size}`]: size,\n        [`is-${color}`]: color,\n        'is-loading': loading,\n        'is-multiple': multiple,\n      })}\n      style={style}\n    >\n      <select\n        {...props}\n        ref={ref}\n        multiple={multiple}\n        value={value}\n        readOnly={readOnly}\n        disabled={disabled}\n        name={name}\n      >\n        {children}\n      </select>\n    </div>\n  );\n});\n\nSelect.propTypes = {\n  ...modifiers.propTypes,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  color: PropTypes.oneOf(colors),\n  readOnly: PropTypes.bool,\n  disabled: PropTypes.bool,\n  multiple: PropTypes.bool,\n  loading: PropTypes.bool,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  /**\n       * The name of the input field Commonly used for [multi-input handling](https://reactjs.org/docs/forms.html#handling-multiple-inputs)\n       */\n  name: PropTypes.string,\n};\n\nSelect.defaultProps = {\n  ...modifiers.defaultProps,\n  children: null,\n  className: '',\n  value: '',\n  style: {},\n  size: null,\n  color: null,\n  readOnly: false,\n  disabled: false,\n  multiple: false,\n  loading: false,\n  name: null,\n};\n\nexport default Select;\n"],"file":"select.js"}