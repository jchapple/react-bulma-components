{"version":3,"sources":["../../../../src/components/loader/__test__/loader.test.js"],"names":["describe","it","expect","Loader","toMatchSnapshot","component","renderer","create","toJSON","width","zIndex"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,QAAQ,CAAC,eAAD,EAAkB,YAAM;AAC9BC,EAAAA,EAAE,CAAC,cAAD,EAAiB,YAAM;AACvBC,IAAAA,MAAM,CAACC,SAAD,CAAN,CAAeC,eAAf;AACD,GAFC,CAAF;AAGAH,EAAAA,EAAE,CAAC,2BAAD,EAA8B,YAAM;AACpC,QAAMI,SAAS,GAAGC,2BAASC,MAAT,CAAgB,6BAAC,SAAD,OAAhB,CAAlB;;AACAL,IAAAA,MAAM,CAACG,SAAS,CAACG,MAAV,EAAD,CAAN,CAA2BJ,eAA3B;AACD,GAHC,CAAF;AAIAH,EAAAA,EAAE,CAAC,iDAAD,EAAoD,YAAM;AAC1D,QAAMI,SAAS,GAAGC,2BAASC,MAAT,CAAgB,6BAAC,SAAD;AAAQ,MAAA,SAAS,EAAC;AAAlB,MAAhB,CAAlB;;AACAL,IAAAA,MAAM,CAACG,SAAS,CAACG,MAAV,EAAD,CAAN,CAA2BJ,eAA3B;AACD,GAHC,CAAF;AAIAH,EAAAA,EAAE,CAAC,kCAAD,EAAqC,YAAM;AAC3C,QAAMI,SAAS,GAAGC,2BAASC,MAAT,CAAgB,6BAAC,SAAD;AAAQ,MAAA,QAAQ,EAAC;AAAjB,MAAhB,CAAlB;;AACAL,IAAAA,MAAM,CAACG,SAAS,CAACG,MAAV,EAAD,CAAN,CAA2BJ,eAA3B;AACD,GAHC,CAAF;AAIAH,EAAAA,EAAE,CAAC,kCAAD,EAAqC,YAAM;AAC3C,QAAMI,SAAS,GAAGC,2BAASC,MAAT,CAAgB,6BAAC,SAAD;AAAQ,MAAA,QAAQ,EAAC,SAAjB;AAA2B,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB;AAAlC,MAAhB,CAAlB;;AACAR,IAAAA,MAAM,CAACG,SAAS,CAACG,MAAV,EAAD,CAAN,CAA2BJ,eAA3B;AACD,GAHC,CAAF;AAID,CApBO,CAAR","sourcesContent":["import React from 'react';\nimport renderer from 'react-test-renderer';\nimport Loader from '..';\n\ndescribe('Box component', () => {\n  it('Should Exist', () => {\n    expect(Loader).toMatchSnapshot();\n  });\n  it('Should have box classname', () => {\n    const component = renderer.create(<Loader />);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should concat Bulma class with classes in props', () => {\n    const component = renderer.create(<Loader className=\"other-class test\" />);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should render as an html section', () => {\n    const component = renderer.create(<Loader renderAs=\"section\" />);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should have custom inline styles', () => {\n    const component = renderer.create(<Loader renderAs=\"section\" style={{ width: 200, zIndex: 1 }} />);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n});\n"],"file":"loader.test.js"}