{"version":3,"sources":["../../../src/components/modal/modal.story.js"],"names":["OpenModal","state","show","open","setState","close","props","modal","children","React","Component","propTypes","PropTypes","object","node","isRequired","defaultProps","module","add","closeOnEsc","backgroundColor","showClose","closeOnBlur","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { storiesOf } from '@storybook/react';\n\nimport Modal from 'react-bulma-components/lib/components/modal';\nimport Image from 'react-bulma-components/lib/components/image';\nimport Media from 'react-bulma-components/lib/components/media';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Content from 'react-bulma-components/lib/components/content';\nimport Section from 'react-bulma-components/lib/components/section';\nimport Level from 'react-bulma-components/lib/components/level';\n\nclass OpenModal extends React.Component {\n  static propTypes = {\n    modal: PropTypes.object,\n    children: PropTypes.node.isRequired,\n  }\n\n  static defaultProps = {\n    modal: {},\n  }\n\n  state = {\n    show: false,\n  }\n\n  open = () => this.setState({ show: true });\n  close = () => this.setState({ show: false });\n\n  render() {\n    return (\n      <div>\n        <Button onClick={this.open}>Open</Button>\n        <Modal show={this.state.show} onClose={this.close} {...this.props.modal}>\n          {this.props.children}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nstoriesOf('Modal', module)\n  .add('Default', (() => (\n    <OpenModal modal={{ closeOnEsc: false }}>\n      <Modal.Content>\n        <Section style={{ backgroundColor: 'white' }}>\n          Click on the {'\"X\"'} button on the top-right button to close the Modal (pass closeOnEsc=false to the modal to avoid closing it with the keyboard)\n        </Section>\n      </Modal.Content>\n    </OpenModal>\n  )))\n  .add('Close with keyboard', (() => (\n    <OpenModal modal={{ showClose: false }}>\n      <Modal.Content>\n        <Section style={{ backgroundColor: 'white' }}>\n          Press ESC on your keyboard to close this modal, Pass  showClose: false if you want to hide the close button\n        </Section>\n      </Modal.Content>\n    </OpenModal>\n  )))\n  .add('Close on click outside', (() => (\n    <OpenModal modal={{ closeOnBlur: true, showClose: false }}>\n      <Modal.Content>\n        <Section style={{ backgroundColor: 'white' }}>\n          Pass closeOnBlur: true to enable to close the Modal when the user click outside the main modal container\n        </Section>\n      </Modal.Content>\n    </OpenModal>\n  )))\n  .add('Modal Card', (() => (\n    <OpenModal modal={{ closeOnBlur: true }}>\n      <Modal.Card>\n        <Modal.Card.Head>\n          <Modal.Card.Title>\n            Title\n          </Modal.Card.Title>\n        </Modal.Card.Head>\n        <Modal.Card.Body>\n          <Media>\n            <Media.Item renderAs=\"figure\" position=\"left\">\n              <Image renderAs=\"p\" size={64} alt=\"64x64\" src=\"http://bulma.io/images/placeholders/128x128.png\" />\n            </Media.Item>\n            <Media.Item>\n              <Content>\n                <p>\n                  <strong>John Smith</strong> <small>@johnsmith</small> <small>31m</small>\n                  <br />\n                  If the children of the Modal is a card, the close button will be on the Card Head instead than the top-right corner\n                  You can also pass showClose = false to Card.Head to hide the close button\n                </p>\n              </Content>\n              <Level breakpoint=\"mobile\">\n                <Level.Side align=\"left\">\n                  <Button link>Like</Button>\n                  <Button link>Share</Button>\n                </Level.Side>\n              </Level>\n            </Media.Item>\n          </Media>\n        </Modal.Card.Body>\n        <Modal.Card.Foot style={{ alignItems: 'center', justifyContent: 'center' }}>\n          <p>\n            Lorem Ipsum...\n          </p>\n        </Modal.Card.Foot>\n      </Modal.Card>\n    </OpenModal>\n  )));\n"],"file":"modal.story.js"}