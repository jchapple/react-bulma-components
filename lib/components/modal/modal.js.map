{"version":3,"sources":["../../../src/components/modal/modal.js"],"names":["KEYCODES","ESCAPE","Modal","portalElement","state","getDocument","props","document","handleKeydown","e","keyCode","show","onClose","closeOnEsc","doc","createElement","setAttribute","body","appendChild","addEventListener","forceUpdate","removeEventListener","remove","innerRef","closeOnBlur","className","children","isCard","React","Children","only","type","toString","indexOf","showClose","cloneElement","ReactDOM","createPortal","PureComponent","propTypes","PropTypes","node","bool","isRequired","func","object","string","defaultProps","undefined","ModalRef","forwardRef","ref","Content","ModalContent","Card","ModalCard"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport ModalContent from './components/content';\nimport ModalCard from './components/card';\n\nconst KEYCODES = {\n  ESCAPE: 27,\n};\n\nclass Modal extends PureComponent {\n  portalElement = null;\n\n  static propTypes = {\n    innerRef: PropTypes.node,\n    show: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    closeOnEsc: PropTypes.bool,\n    closeOnBlur: PropTypes.bool,\n    showClose: PropTypes.bool,\n    children: PropTypes.node.isRequired,\n    document: PropTypes.object,\n    className: PropTypes.string,\n  }\n\n  static defaultProps = {\n    innerRef: undefined,\n    closeOnEsc: true,\n    showClose: true,\n    closeOnBlur: false,\n    className: '',\n    // Expose mount point for testing\n    document: null,\n  }\n\n  state = {};\n\n  componentDidMount() {\n    const { closeOnEsc } = this.props;\n\n    const doc = this.getDocument();\n    this.portalElement = doc.createElement('div');\n    this.portalElement.setAttribute('class', 'modal-container');\n    doc.body.appendChild(this.portalElement);\n    // eslint-disable-next-line\n    if (closeOnEsc) {\n      doc.addEventListener('keydown', this.handleKeydown);\n    }\n    this.forceUpdate();\n  }\n\n  componentWillUnmount() {\n    const doc = this.getDocument();\n    const { closeOnEsc } = this.props;\n    if (closeOnEsc && doc) {\n      doc.removeEventListener('keydown', this.handleKeydown);\n    }\n    this.portalElement.remove();\n  }\n\n  getDocument = () => {\n    if (this.props.document) {\n      return this.props.document;\n    }\n\n    if (typeof document !== 'undefined') {\n      return document;\n    }\n\n    return null;\n  }\n\n  handleKeydown = (e) => {\n    if (e.keyCode === KEYCODES.ESCAPE && this.props.show) {\n      this.props.onClose();\n    }\n  }\n\n  render() {\n    const { innerRef, closeOnBlur, show, className } = this.props;\n    if (!this.getDocument() || !this.portalElement || !show) {\n      return null;\n    }\n    let { children } = this.props;\n    let isCard;\n    try {\n      isCard = React.Children.only(children).type.toString().indexOf('ModalCard') !== -1;\n    } catch (e) {\n      isCard = false;\n    }\n\n    const showClose = !isCard && this.props.showClose;\n\n    if (isCard) {\n      children = React.cloneElement(children, {\n        onClose: this.props.onClose,\n      });\n    }\n\n    return ReactDOM.createPortal(\n      <div\n        ref={innerRef}\n        className={classnames('modal', className, {\n          'is-active': show,\n        })}\n      >\n        <div role=\"presentation\" className=\"modal-background\" onClick={closeOnBlur ? this.props.onClose : null} />\n        {children}\n        {\n          showClose && (\n            <button type=\"button\" onClick={this.props.onClose} className=\"modal-close is-large\" aria-label=\"close\" />\n          )\n        }\n      </div>,\n      this.portalElement,\n    );\n  }\n}\n\nconst ModalRef = React.forwardRef((props, ref) => <Modal innerRef={ref} {...props} />);\n\nModalRef.Content = ModalContent;\nModalRef.Card = ModalCard;\n\nexport default ModalRef;\n"],"file":"modal.js"}