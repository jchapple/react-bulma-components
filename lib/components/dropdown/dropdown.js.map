{"version":3,"sources":["../../../src/components/dropdown/dropdown.js"],"names":["colors","concat","Object","keys","CONSTANTS","COLORS","map","key","Dropdown","state","open","close","evt","props","hoverable","htmlElement","contains","target","setState","toggle","preventDefault","select","value","onChange","document","addEventListener","removeEventListener","className","children","color","align","right","up","allProps","current","modifiers","clean","childrenArray","React","Children","child","i","cloneElement","type","DropdownItem","active","onClick","console","warn","node","classnames","PureComponent","Item","Divider","DropdownDivider","propTypes","PropTypes","string","style","shape","any","func","oneOf","bool","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport CONSTANTS from '../../constants';\nimport DropdownItem from './components/item';\nimport DropdownDivider from './components/divider';\nimport Button from '../button';\nimport Icon from '../icon';\nimport modifiers from '../../modifiers';\n\nconst colors = [null].concat(Object.keys(CONSTANTS.COLORS).map(key => CONSTANTS.COLORS[key]));\n\nexport default class Dropdown extends PureComponent {\n  static Item = DropdownItem;\n\n  static Divider = DropdownDivider;\n\n  static propTypes = {\n    ...modifiers.propTypes,\n    className: PropTypes.string,\n    style: PropTypes.shape({}),\n    children: PropTypes.node,\n    value: PropTypes.any,\n    onChange: PropTypes.func,\n    color: PropTypes.oneOf(colors),\n    right: PropTypes.bool,\n    up: PropTypes.bool,\n    align: PropTypes.oneOf(['right']),\n    hoverable: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    ...modifiers.defaultProps,\n    className: '',\n    style: {},\n    value: undefined,\n    children: [],\n    onChange: undefined,\n    color: undefined,\n    align: undefined,\n    hoverable: undefined,\n  }\n\n  state = {\n    open: false,\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.close);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.close);\n  }\n\n  close = (evt) => {\n    // IDK yet how to test using the ref in enzime\n    if (this.props.hoverable || (evt && this.htmlElement.contains(evt.target))) {\n      return;\n    }\n    this.setState({ open: false });\n  }\n\n  toggle = (evt) => {\n    if (this.props.hoverable) {\n      return;\n    }\n    if (evt) {\n      evt.preventDefault();\n    }\n    this.setState(({ open }) => ({ open: !open }));\n  }\n\n  select = value => () => {\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n    this.close();\n  }\n\n  render() {\n    const {\n      className,\n      children,\n      value,\n      color,\n      align,\n      right,\n      up,\n      hoverable,\n      onChange,\n      ...allProps\n    } = this.props;\n    let current = null;\n    const props = modifiers.clean(allProps);\n\n    const childrenArray = React.Children.map(children, (child, i) => {\n      if (i === 0 || child.props.value === value) {\n        current = child.props.children;\n      }\n      return React.cloneElement(child, child.type === DropdownItem ? {\n        active: child.props.value === value,\n        onClick: this.select(child.props.value),\n      } : {});\n    });\n\n    if (align === 'right') {\n      // eslint-disable-next-line no-console\n      console.warn('react-bulma-components: \"Align\" prop will be replaced by \"right\" prop in future releases. Please update your code to avoid breaking changes.');\n    }\n\n    return (\n      <div\n        {...props}\n        ref={(node) => { this.htmlElement = node; }}\n        className={classnames('dropdown', modifiers.classnames(allProps), className, {\n          'is-active': this.state.open,\n          'is-up': up,\n          'is-right': right || align === 'right',\n          'is-hoverable': hoverable,\n        })}\n      >\n        <div className=\"dropdown-trigger\" role=\"presentation\" onClick={this.toggle}>\n          <Button color={color}>\n            <span>\n              {current}\n            </span>\n            <Icon icon=\"angle-down\" size=\"small\" />\n          </Button>\n        </div>\n        <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n          <div className=\"dropdown-content\">\n            {childrenArray}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"file":"dropdown.js"}