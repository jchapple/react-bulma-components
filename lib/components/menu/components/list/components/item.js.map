{"version":3,"sources":["../../../../../../src/components/menu/components/list/components/item.js"],"names":["MenuListItem","React","forwardRef","ref","children","active","className","props","Children","only","type","List","child","title","cloneElement","propTypes","modifiers","PropTypes","string","oneOfType","element","bool","renderAs","func","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,YAAY,GAAGC,eAAMC,UAAN,CAAiB,gBAKnCC,GALmC,EAK3B;AAAA,MAJTC,QAIS,QAJTA,QAIS;AAAA,MAHTC,MAGS,QAHTA,MAGS;AAAA,MAFTC,SAES,QAFTA,SAES;AAAA,MADNC,KACM;;AACT,MAAI,OAAOH,QAAP,KAAoB,QAAxB,EAAkC;AAChC,WACE;AAAI,MAAA,GAAG,EAAED;AAAT,OACE,6BAAC,gBAAD;AAAS,MAAA,SAAS,EAAE,yBAAWG,SAAX,EAAsB;AAAE,qBAAaD;AAAf,OAAtB;AAApB,OAAwEE,KAAxE,GACGH,QADH,CADF,CADF;AAOD;;AAED,MAAIH,eAAMO,QAAN,CAAeC,IAAf,CAAoBL,QAApB,EAA8BM,IAA9B,KAAuCC,aAA3C,EAAiD;AAC/C,QAAMC,KAAK,GAAGX,eAAMO,QAAN,CAAeC,IAAf,CAAoBL,QAApB,CAAd;;AACA,WACE;AAAI,MAAA,GAAG,EAAED;AAAT,OACE,6BAAC,gBAAD;AAAS,MAAA,SAAS,EAAE,yBAAWG,SAAX,EAAsB;AAAE,qBAAaD;AAAf,OAAtB;AAApB,OAAwEE,KAAxE,GACGK,KAAK,CAACL,KAAN,CAAYM,KADf,CADF,EAIGZ,eAAMa,YAAN,CAAmBF,KAAnB,EAA0B;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA1B,CAJH,CADF;AAQD;;AAED,SACE;AAAI,IAAA,GAAG,EAAEV;AAAT,KACGC,QADH,CADF;AAKD,CAjCoB,CAArB;;AAmCAJ,YAAY,CAACe,SAAb,qBACKC,mBAAUD,SADf;AAEET,EAAAA,SAAS,EAAEW,mBAAUC,MAFvB;AAGEd,EAAAA,QAAQ,EAAEa,mBAAUE,SAAV,CAAoB,CAC5BF,mBAAUC,MADkB,EAE5BD,mBAAUG,OAFkB,CAApB,CAHZ;AAOEf,EAAAA,MAAM,EAAEY,mBAAUI,IAPpB;AAQEC,EAAAA,QAAQ,EAAEL,mBAAUE,SAAV,CAAoB,CAC5BF,mBAAUC,MADkB,EAE5BD,mBAAUM,IAFkB,CAApB;AARZ;AAcAvB,YAAY,CAACwB,YAAb,qBACKR,mBAAUQ,YADf;AAEElB,EAAAA,SAAS,EAAE,EAFb;AAGEF,EAAAA,QAAQ,EAAE,IAHZ;AAIEC,EAAAA,MAAM,EAAE,KAJV;AAKEiB,EAAAA,QAAQ,EAAE;AALZ;eAQetB,Y","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n/* eslint-disable-next-line import/no-cycle */\nimport List from '../list';\nimport modifiers from '../../../../../modifiers';\nimport Element from '../../../../element';\n\nconst MenuListItem = React.forwardRef(({\n  children,\n  active,\n  className,\n  ...props\n}, ref) => {\n  if (typeof children === 'string') {\n    return (\n      <li ref={ref}>\n        <Element className={classnames(className, { 'is-active': active })} {...props}>\n          {children}\n        </Element>\n      </li>\n    );\n  }\n\n  if (React.Children.only(children).type === List) {\n    const child = React.Children.only(children);\n    return (\n      <li ref={ref}>\n        <Element className={classnames(className, { 'is-active': active })} {...props}>\n          {child.props.title}\n        </Element>\n        {React.cloneElement(child, { title: null })}\n      </li>\n    );\n  }\n\n  return (\n    <li ref={ref}>\n      {children}\n    </li>\n  );\n});\n\nMenuListItem.propTypes = {\n  ...modifiers.propTypes,\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n  ]),\n  active: PropTypes.bool,\n  renderAs: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n};\n\nMenuListItem.defaultProps = {\n  ...modifiers.defaultProps,\n  className: '',\n  children: null,\n  active: false,\n  renderAs: 'a',\n};\n\nexport default MenuListItem;\n"],"file":"item.js"}