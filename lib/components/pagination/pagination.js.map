{"version":3,"sources":["../../../src/components/pagination/pagination.js"],"names":["Pagination","goToPage","page","evt","preventDefault","onChange","props","firstPage","current","total","delta","lastPage","innerRef","next","previous","showPrevNext","autoHide","className","undefined","Array","fill","map","_","i","React","PureComponent","propTypes","modifiers","PropTypes","node","number","func","bool","string","defaultProps","renderAs","forwardRef","ref"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,U;;;;;;;;;;;;;;;;0MAsCJC,Q,GAAW,UAAAC,IAAI;AAAA,aAAI,UAACC,GAAD,EAAS;AAC1BA,QAAAA,GAAG,CAACC,cAAJ;AAD0B,YAElBC,QAFkB,GAEL,MAAKC,KAFA,CAElBD,QAFkB;AAG1BA,QAAAA,QAAQ,CAACH,IAAD,CAAR;AACD,OAJc;AAAA,K,QAMfK,S,GAAY,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAAA,UACtBC,KADsB,GACZ,MAAKJ,KADO,CACtBI,KADsB;;AAG9B,UAAIF,OAAO,KAAK,CAAhB,EAAmB;AACjB,eAAO,CAAP;AACD;;AAED,UAAMN,IAAI,GAAGM,OAAO,GAAIE,KAAK,IAAIF,OAAO,KAAKC,KAAZ,GAAoB,CAApB,GAAwB,CAA5B,CAA7B;AAEA,aAAOP,IAAI,IAAI,CAAR,GAAY,CAAZ,GAAgBA,IAAvB;AACD,K,QAEDS,Q,GAAW,UAACH,OAAD,EAAUC,KAAV,EAAoB;AAAA,UACrBC,KADqB,GACX,MAAKJ,KADM,CACrBI,KADqB;;AAG7B,UAAIF,OAAO,KAAKC,KAAhB,EAAuB;AACrB,eAAOA,KAAP;AACD;;AAED,UAAMP,IAAI,GAAGM,OAAO,GAAIE,KAAK,IAAIF,OAAO,KAAK,CAAZ,GAAgB,CAAhB,GAAoB,CAAxB,CAA7B;AAEA,aAAON,IAAI,GAAGO,KAAP,GAAeA,KAAf,GAAuBP,IAA9B;AACD,K;;;;;6BAEQ;AAAA;;AAAA,wBAaH,KAAKI,KAbF;AAAA,UAELM,QAFK,eAELA,QAFK;AAAA,UAGLJ,OAHK,eAGLA,OAHK;AAAA,UAILC,KAJK,eAILA,KAJK;AAAA,UAKLI,IALK,eAKLA,IALK;AAAA,UAMLC,QANK,eAMLA,QANK;AAAA,UAOLC,YAPK,eAOLA,YAPK;AAAA,UAQLL,KARK,eAQLA,KARK;AAAA,UASLM,QATK,eASLA,QATK;AAAA,UAULC,SAVK,eAULA,SAVK;AAAA,UAWLZ,QAXK,eAWLA,QAXK;AAAA,UAYFC,KAZE;;AAcP,UAAIG,KAAK,IAAI,CAAT,IAAcO,QAAlB,EAA4B;AAC1B,eAAO,IAAP;AACD;;AAED,UAAIR,OAAO,GAAGC,KAAd,EAAqB;AACnB,eAAO,IAAP;AACD;;AAED,UAAMF,SAAS,GAAG,KAAKA,SAAL,CAAeC,OAAf,EAAwBC,KAAxB,CAAlB;AACA,UAAME,QAAQ,GAAG,KAAKA,QAAL,CAAcH,OAAd,EAAuBC,KAAvB,CAAjB;AAEA,aACE,6BAAC,gBAAD,eACMH,KADN;AAEE,QAAA,GAAG,EAAEM,QAFP;AAGE,QAAA,SAAS,EAAE,yBAAW,YAAX,EAAyBK,SAAzB,CAHb;AAIE,sBAAW;AAJb,UAOIF,YAAY,IAEV,6BAAC,cAAD,CAAO,QAAP,QACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,QAAQ,EAAE,CAFZ;AAGE,QAAA,OAAO,EAAEP,OAAO,KAAK,CAAZ,GAAgBU,SAAhB,GAA4B,KAAKjB,QAAL,CAAcO,OAAO,GAAG,CAAxB,CAHvC;AAIE,QAAA,SAAS,EAAC,qBAJZ;AAKE,QAAA,KAAK,EAAC,wBALR;AAME,QAAA,QAAQ,EAAEA,OAAO,KAAK;AANxB,SAQGM,QARH,CADF,EAWE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,QAAQ,EAAE,CAFZ;AAGE,QAAA,OAAO,EAAEN,OAAO,KAAKC,KAAZ,GAAoBS,SAApB,GAAgC,KAAKjB,QAAL,CAAcO,OAAO,GAAG,CAAxB,CAH3C;AAIE,QAAA,SAAS,EAAC,iBAJZ;AAKE,QAAA,QAAQ,EAAEA,OAAO,KAAKC;AALxB,SAOGI,IAPH,CAXF,CATN,EAiCIH,KAAK,GAAG,CAAR,IAEE,6BAAC,cAAD,CAAO,QAAP,QACE;AAAI,QAAA,SAAS,EAAC;AAAd,SAEIS,KAAK,CAAER,QAAQ,GAAGJ,SAAZ,GAAyB,CAA1B,CAAL,CAAkCa,IAAlC,CAAuC,CAAvC,EAA0CC,GAA1C,CAA8C,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAC5C;AACA;AAAI,YAAA,GAAG,EAAEA,CAAC,GAAGhB;AAAb,aACE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,QAAQ,EAAE,CAFZ;AAGE,YAAA,SAAS,EAAE,yBAAW,iBAAX,EAA8B;AACvC,4BAAcC,OAAO,KAAKe,CAAC,GAAGhB;AADS,aAA9B,CAHb;AAME,YAAA,OAAO,EAAEC,OAAO,KAAKD,SAAS,GAAGgB,CAAxB,GAA4BL,SAA5B,GAAwC,MAAI,CAACjB,QAAL,CAAcM,SAAS,GAAGgB,CAA1B,CANnD;AAOE,yCAAoBA,CAAC,GAAGhB,SAAxB,CAPF;AAQE,4BAAa;AARf,aAUGgB,CAAC,GAAGhB,SAVP,CADF;AAF4C;AAAA,OAA9C,CAFJ,CADF,CAnCN,CADF;AA+DD;;;;EA5JsBiB,eAAMC,a;;AAAzBzB,U,CACG0B,S,qBACFC,mBAAUD,S;AACbd,EAAAA,QAAQ,EAAEgB,mBAAUC,I;;AACpB;AACArB,EAAAA,OAAO,EAAEoB,mBAAUE,M;;AACnB;AACArB,EAAAA,KAAK,EAAEmB,mBAAUE,M;;AACjB;AACApB,EAAAA,KAAK,EAAEkB,mBAAUE,M;AACjBzB,EAAAA,QAAQ,EAAEuB,mBAAUG,I;;AACpB;AACAlB,EAAAA,IAAI,EAAEe,mBAAUC,I;;AAChB;AACAf,EAAAA,QAAQ,EAAEc,mBAAUC,I;AACpBd,EAAAA,YAAY,EAAEa,mBAAUI,I;AACxBhB,EAAAA,QAAQ,EAAEY,mBAAUI,I;;AACpB;;;AAGAf,EAAAA,SAAS,EAAEW,mBAAUK;;AApBnBjC,U,CAuBGkC,Y,qBACFP,mBAAUO,Y;AACbtB,EAAAA,QAAQ,EAAEM,S;AACVT,EAAAA,KAAK,EAAE,C;AACPD,EAAAA,OAAO,EAAE,C;AACTE,EAAAA,KAAK,EAAE,C;AACPL,EAAAA,QAAQ,EAAE,oBAAM,CAAE,C;AAClBQ,EAAAA,IAAI,EAAE,M;AACNC,EAAAA,QAAQ,EAAE,U;AACVC,EAAAA,YAAY,EAAE,I;AACdC,EAAAA,QAAQ,EAAE,I;AACVC,EAAAA,SAAS,EAAE,E;AACXkB,EAAAA,QAAQ,EAAE;;;eA4HCX,eAAMY,UAAN,CAAiB,UAAC9B,KAAD,EAAQ+B,GAAR;AAAA,SAAgB,6BAAC,UAAD;AAAY,IAAA,QAAQ,EAAEA;AAAtB,KAA+B/B,KAA/B,EAAhB;AAAA,CAAjB,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport modifiers from '../../modifiers';\nimport Element from '../element';\n\nclass Pagination extends React.PureComponent {\n  static propTypes = {\n    ...modifiers.propTypes,\n    innerRef: PropTypes.node,\n    /** Current page */\n    current: PropTypes.number,\n    /** Total pages in total */\n    total: PropTypes.number,\n    /** Amount og pages to display at the left and right of the current (if delta 2 and current page is 3, the paginator will display pages from 1 to 5) */\n    delta: PropTypes.number,\n    onChange: PropTypes.func,\n    /** Text of the Next button */\n    next: PropTypes.node,\n    /** Text of the Previous button */\n    previous: PropTypes.node,\n    showPrevNext: PropTypes.bool,\n    autoHide: PropTypes.bool,\n    /**\n     * Classname of the container of the pagination, this could be used to customize the inner views\n     */\n    className: PropTypes.string,\n  }\n\n  static defaultProps = {\n    ...modifiers.defaultProps,\n    innerRef: undefined,\n    total: 1,\n    current: 1,\n    delta: 1,\n    onChange: () => {},\n    next: 'Next',\n    previous: 'Previous',\n    showPrevNext: true,\n    autoHide: true,\n    className: '',\n    renderAs: 'nav',\n  }\n\n  goToPage = page => (evt) => {\n    evt.preventDefault();\n    const { onChange } = this.props;\n    onChange(page);\n  }\n\n  firstPage = (current, total) => {\n    const { delta } = this.props;\n\n    if (current === 1) {\n      return 1;\n    }\n\n    const page = current - (delta * (current === total ? 2 : 1));\n\n    return page <= 0 ? 1 : page;\n  }\n\n  lastPage = (current, total) => {\n    const { delta } = this.props;\n\n    if (current === total) {\n      return total;\n    }\n\n    const page = current + (delta * (current === 1 ? 2 : 1));\n\n    return page > total ? total : page;\n  }\n\n  render() {\n    const {\n      innerRef,\n      current,\n      total,\n      next,\n      previous,\n      showPrevNext,\n      delta,\n      autoHide,\n      className,\n      onChange,\n      ...props\n    } = this.props;\n    if (total <= 1 && autoHide) {\n      return null;\n    }\n\n    if (current > total) {\n      return null;\n    }\n\n    const firstPage = this.firstPage(current, total);\n    const lastPage = this.lastPage(current, total);\n\n    return (\n      <Element\n        {...props}\n        ref={innerRef}\n        className={classnames('pagination', className)}\n        aria-label=\"pagination\"\n      >\n        {\n          showPrevNext\n            && (\n            <React.Fragment>\n              <a\n                role=\"button\"\n                tabIndex={0}\n                onClick={current === 1 ? undefined : this.goToPage(current - 1)}\n                className=\"pagination-previous\"\n                title=\"This is the first page\"\n                disabled={current === 1}\n              >\n                {previous}\n              </a>\n              <a\n                role=\"button\"\n                tabIndex={0}\n                onClick={current === total ? undefined : this.goToPage(current + 1)}\n                className=\"pagination-next\"\n                disabled={current === total}\n              >\n                {next}\n              </a>\n            </React.Fragment>\n            )\n        }\n        {\n          delta > 0\n            && (\n            <React.Fragment>\n              <ul className=\"pagination-list\">\n                {\n                  Array((lastPage - firstPage) + 1).fill(0).map((_, i) => (\n                    // eslint-disable-next-line react/no-array-index-key\n                    <li key={i + firstPage}>\n                      <a\n                        role=\"button\"\n                        tabIndex={0}\n                        className={classnames('pagination-link', {\n                          'is-current': current === i + firstPage,\n                        })}\n                        onClick={current === firstPage + i ? undefined : this.goToPage(firstPage + i)}\n                        aria-label={`Page ${i + firstPage}`}\n                        aria-current=\"page\"\n                      >\n                        {i + firstPage}\n                      </a>\n                    </li>\n                  ))\n                }\n              </ul>\n            </React.Fragment>\n            )\n        }\n      </Element>\n    );\n  }\n}\n\nexport default React.forwardRef((props, ref) => <Pagination innerRef={ref} {...props} />);\n"],"file":"pagination.js"}