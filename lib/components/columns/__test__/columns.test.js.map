{"version":3,"sources":["../../../../src/components/columns/__test__/columns.test.js"],"names":["describe","it","component","renderer","create","expect","toJSON","toMatchSnapshot"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,QAAQ,CAAC,mBAAD,EAAsB,YAAM;AAClCC,EAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAM;AACxC,QAAMC,SAAS,GAAGC,2BAASC,MAAT,CAChB,6BAAC,SAAD,QACE,6BAAC,SAAD,CAAS,MAAT,YADF,EAIE,6BAAC,SAAD,CAAS,MAAT,YAJF,EAOE,6BAAC,SAAD,CAAS,MAAT,YAPF,CADgB,CAAlB;;AAYAC,IAAAA,MAAM,CAACH,SAAS,CAACI,MAAV,EAAD,CAAN,CAA2BC,eAA3B;AACD,GAdC,CAAF;AAeAN,EAAAA,EAAE,CAAC,kEAAD,EAAqE,YAAM;AAC3E,QAAMC,SAAS,GAAGC,2BAASC,MAAT,CAChB,6BAAC,SAAD,QACE,6BAAC,SAAD,CAAS,MAAT;AAAgB,MAAA,IAAI,EAAC;AAArB,WADF,EAIE,6BAAC,SAAD,CAAS,MAAT,YAJF,EAOE,6BAAC,SAAD,CAAS,MAAT,YAPF,EAUE,6BAAC,SAAD,CAAS,MAAT,YAVF,CADgB,CAAlB;;AAeAC,IAAAA,MAAM,CAACH,SAAS,CAACI,MAAV,EAAD,CAAN,CAA2BC,eAA3B;AACD,GAjBC,CAAF;AAkBAN,EAAAA,EAAE,CAAC,4BAAD,EAA+B,YAAM;AACrC,QAAMC,SAAS,GAAGC,2BAASC,MAAT,CAChB,6BAAC,SAAD;AAAS,MAAA,QAAQ,EAAC;AAAlB,OACE,6BAAC,SAAD,CAAS,MAAT;AAAgB,MAAA,QAAQ,EAAC,GAAzB;AAA6B,MAAA,IAAI,EAAC;AAAlC,WADF,EAIE,6BAAC,SAAD,CAAS,MAAT;AAAgB,MAAA,QAAQ,EAAC;AAAzB,WAJF,EAOE,6BAAC,SAAD,CAAS,MAAT;AAAgB,MAAA,QAAQ,EAAC;AAAzB,WAPF,EAUE,6BAAC,SAAD,CAAS,MAAT;AAAgB,MAAA,QAAQ,EAAC;AAAzB,WAVF,CADgB,CAAlB;;AAeAC,IAAAA,MAAM,CAACH,SAAS,CAACI,MAAV,EAAD,CAAN,CAA2BC,eAA3B;AACD,GAjBC,CAAF;AAkBAN,EAAAA,EAAE,CAAC,gFAAD,EAAmF,YAAM;AACzF,QAAMC,SAAS,GAAGC,2BAASC,MAAT,CAChB,6BAAC,SAAD,QACE,6BAAC,SAAD,CAAS,MAAT;AAAgB,MAAA,IAAI,EAAC;AAArB,WADF,EAIE,6BAAC,SAAD,CAAS,MAAT;AAAgB,MAAA,MAAM;AAAtB,WAJF,EAOE,6BAAC,SAAD,CAAS,MAAT,YAPF,EAUE,6BAAC,SAAD,CAAS,MAAT,YAVF,CADgB,CAAlB;;AAeAC,IAAAA,MAAM,CAACH,SAAS,CAACI,MAAV,EAAD,CAAN,CAA2BC,eAA3B;AACD,GAjBC,CAAF;AAkBD,CAtEO,CAAR","sourcesContent":["import React from 'react';\nimport renderer from 'react-test-renderer';\nimport Columns from '..';\n\ndescribe('Columns component', () => {\n  it('Should have columns classname', () => {\n    const component = renderer.create(\n      <Columns>\n        <Columns.Column>\n1\n        </Columns.Column>\n        <Columns.Column>\n2\n        </Columns.Column>\n        <Columns.Column>\n3\n        </Columns.Column>\n      </Columns>);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should have columns one column half width and 3 other as default', () => {\n    const component = renderer.create(\n      <Columns>\n        <Columns.Column size=\"half\">\n1\n        </Columns.Column>\n        <Columns.Column>\n2\n        </Columns.Column>\n        <Columns.Column>\n3\n        </Columns.Column>\n        <Columns.Column>\n4\n        </Columns.Column>\n      </Columns>);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should render as paragraph', () => {\n    const component = renderer.create(\n      <Columns renderAs=\"p\">\n        <Columns.Column renderAs=\"p\" size=\"half\">\n1\n        </Columns.Column>\n        <Columns.Column renderAs=\"p\">\n2\n        </Columns.Column>\n        <Columns.Column renderAs=\"p\">\n3\n        </Columns.Column>\n        <Columns.Column renderAs=\"p\">\n4\n        </Columns.Column>\n      </Columns>);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should have columns one column half width, other narrow and 2 other as default', () => {\n    const component = renderer.create(\n      <Columns>\n        <Columns.Column size=\"half\">\n1\n        </Columns.Column>\n        <Columns.Column narrow>\n2\n        </Columns.Column>\n        <Columns.Column>\n3\n        </Columns.Column>\n        <Columns.Column>\n4\n        </Columns.Column>\n      </Columns>);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n});\n"],"file":"columns.test.js"}