{"version":3,"sources":["../../../src/components/columns/columns.js"],"names":["breakpoints","concat","Object","keys","CONSTANTS","BREAKPOINTS","map","key","Columns","React","forwardRef","ref","className","breakpoint","gapless","multiline","centered","props","Column","COLUMN_CONSTANTS","propTypes","modifiers","children","PropTypes","node","string","style","shape","oneOf","bool","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,WAAW,GAAG,CAAC,IAAD,EAAOC,MAAP,CAAcC,MAAM,CAACC,IAAP,CAAYC,mBAAUC,WAAtB,EAAmCC,GAAnC,CAAuC,UAAAC,GAAG;AAAA,SAAIH,mBAAUC,WAAV,CAAsBE,GAAtB,CAAJ;AAAA,CAA1C,CAAd,CAApB;;AAEA,IAAMC,OAAO,GAAGC,eAAMC,UAAN,CAAiB,gBAO9BC,GAP8B;AAAA;;AAAA,MAC/BC,SAD+B,QAC/BA,SAD+B;AAAA,MAE/BC,UAF+B,QAE/BA,UAF+B;AAAA,MAG/BC,OAH+B,QAG/BA,OAH+B;AAAA,MAI/BC,SAJ+B,QAI/BA,SAJ+B;AAAA,MAK/BC,QAL+B,QAK/BA,QAL+B;AAAA,MAM5BC,KAN4B;;AAAA,SAQ/B,6BAAC,gBAAD,eACMA,KADN;AAEE,IAAA,GAAG,EAAEN,GAFP;AAGE,IAAA,SAAS,EAAE,yBAAWC,SAAX,EAAsB,SAAtB,+DACFC,UADE,GACaA,UADb,gCAET,YAFS,EAEKC,OAFL,gCAGT,cAHS,EAGOC,SAHP,gCAIT,aAJS,EAIMC,QAJN;AAHb,KAR+B;AAAA,CAAjB,CAAhB;;AAoBAR,OAAO,CAACU,MAAR,GAAiBA,eAAjB;AAEAV,OAAO,CAACJ,SAAR,GAAoBe,mBAApB;AAEAX,OAAO,CAACY,SAAR,qBACKC,mBAAUD,SADf;AAEEE,EAAAA,QAAQ,EAAEC,mBAAUC,IAFtB;AAGEZ,EAAAA,SAAS,EAAEW,mBAAUE,MAHvB;AAIEC,EAAAA,KAAK,EAAEH,mBAAUI,KAAV,CAAgB,EAAhB,CAJT;;AAKE;;;AAGAd,EAAAA,UAAU,EAAEU,mBAAUK,KAAV,CAAgB5B,WAAhB,CARd;;AASE;;;AAGAc,EAAAA,OAAO,EAAES,mBAAUM,IAZrB;;AAaE;;;AAGAd,EAAAA,SAAS,EAAEQ,mBAAUM,IAhBvB;;AAiBE;;;AAGAb,EAAAA,QAAQ,EAAEO,mBAAUM;AApBtB;AAuBArB,OAAO,CAACsB,YAAR,qBACKT,mBAAUS,YADf;AAEER,EAAAA,QAAQ,EAAE,IAFZ;AAGEV,EAAAA,SAAS,EAAE,EAHb;AAIEc,EAAAA,KAAK,EAAE,EAJT;AAKEb,EAAAA,UAAU,EAAE,IALd;AAMEC,EAAAA,OAAO,EAAE,KANX;AAOEE,EAAAA,QAAQ,EAAE,KAPZ;AAQED,EAAAA,SAAS,EAAE;AARb;eAWeP,O","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CONSTANTS from '../../constants';\nimport Column from './components/column';\nimport COLUMN_CONSTANTS from './constants';\nimport modifiers from '../../modifiers';\nimport Element from '../element';\n\nconst breakpoints = [null].concat(Object.keys(CONSTANTS.BREAKPOINTS).map(key => CONSTANTS.BREAKPOINTS[key]));\n\nconst Columns = React.forwardRef(({\n  className,\n  breakpoint,\n  gapless,\n  multiline,\n  centered,\n  ...props\n}, ref) => (\n  <Element\n    {...props}\n    ref={ref}\n    className={classNames(className, 'columns', {\n      [`is-${breakpoint}`]: breakpoint,\n      'is-gapless': gapless,\n      'is-multiline': multiline,\n      'is-centered': centered,\n    })}\n  />\n));\n\nColumns.Column = Column;\n\nColumns.CONSTANTS = COLUMN_CONSTANTS;\n\nColumns.propTypes = {\n  ...modifiers.propTypes,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  /**\n     * Breakpoint where columns become stacked.\n     */\n  breakpoint: PropTypes.oneOf(breakpoints),\n  /**\n     * `true` to remove space between columns\n     */\n  gapless: PropTypes.bool,\n  /**\n     * `true` if you want to use more than one line if you add more column elements that would fit in a single row.\n     */\n  multiline: PropTypes.bool,\n  /**\n     * `true` you want the columns inside to be horizontaly centered\n     */\n  centered: PropTypes.bool,\n};\n\nColumns.defaultProps = {\n  ...modifiers.defaultProps,\n  children: null,\n  className: '',\n  style: {},\n  breakpoint: null,\n  gapless: false,\n  centered: false,\n  multiline: true,\n};\n\nexport default Columns;\n"],"file":"columns.js"}