{"version":3,"sources":["../../../../src/components/navbar/components/item.js"],"names":["NavbarItem","React","forwardRef","ref","className","active","children","dropdown","dropdownUp","hoverable","renderAs","props","as","propTypes","modifiers","style","PropTypes","shape","string","bool","node","oneOfType","func","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,UAAU,GAAGC,eAAMC,UAAN,CAAiB,gBASjCC,GATiC,EASzB;AAAA,MARTC,SAQS,QARTA,SAQS;AAAA,MAPTC,MAOS,QAPTA,MAOS;AAAA,MANTC,QAMS,QANTA,QAMS;AAAA,MALTC,QAKS,QALTA,QAKS;AAAA,MAJTC,UAIS,QAJTA,UAIS;AAAA,MAHTC,SAGS,QAHTA,SAGS;AAAA,MAFTC,QAES,QAFTA,QAES;AAAA,MADNC,KACM;;AACT,MAAIC,EAAE,GAAGF,QAAT;;AACA,MAAIH,QAAQ,IAAIG,QAAQ,KAAK,GAA7B,EAAkC;AAChCE,IAAAA,EAAE,GAAG,MAAL;AACD;;AACD,SACE,6BAAC,gBAAD,eACMD,KADN;AAEE,IAAA,GAAG,EAAER,GAFP;AAGE,IAAA,QAAQ,EAAES,EAHZ;AAIE,IAAA,SAAS,EAAE,yBAAW,aAAX,EAA0BR,SAA1B,EAAqC;AAC9C,mBAAaC,MADiC;AAE9C,sBAAgBE,QAF8B;AAG9C,sBAAgBE,SAH8B;AAI9C,yBAAmBD;AAJ2B,KAArC;AAJb,MAWGF,QAXH,CADF;AAeD,CA7BkB,CAAnB;;AA+BAN,UAAU,CAACa,SAAX,qBACKC,mBAAUD,SADf;AAEEE,EAAAA,KAAK,EAAEC,mBAAUC,KAAV,CAAgB,EAAhB,CAFT;AAGEb,EAAAA,SAAS,EAAEY,mBAAUE,MAHvB;AAIEb,EAAAA,MAAM,EAAEW,mBAAUG,IAJpB;AAKEZ,EAAAA,QAAQ,EAAES,mBAAUG,IALtB;AAMEX,EAAAA,UAAU,EAAEQ,mBAAUG,IANxB;AAOEV,EAAAA,SAAS,EAAEO,mBAAUG,IAPvB;AAQEb,EAAAA,QAAQ,EAAEU,mBAAUI,IARtB;AASEV,EAAAA,QAAQ,EAAEM,mBAAUK,SAAV,CAAoB,CAACL,mBAAUE,MAAX,EAAmBF,mBAAUM,IAA7B,CAApB;AATZ;AAYAtB,UAAU,CAACuB,YAAX,qBACKT,mBAAUS,YADf;AAEER,EAAAA,KAAK,EAAE,EAFT;AAGEX,EAAAA,SAAS,EAAE,EAHb;AAIEC,EAAAA,MAAM,EAAE,KAJV;AAKEC,EAAAA,QAAQ,EAAE,IALZ;AAMEC,EAAAA,QAAQ,EAAE,KANZ;AAOEE,EAAAA,SAAS,EAAE,KAPb;AAQED,EAAAA,UAAU,EAAE,KARd;AASEE,EAAAA,QAAQ,EAAE;AATZ;eAYeV,U","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport modifiers from '../../../modifiers';\nimport Element from '../../element';\n\nconst NavbarItem = React.forwardRef(({\n  className,\n  active,\n  children,\n  dropdown,\n  dropdownUp,\n  hoverable,\n  renderAs,\n  ...props\n}, ref) => {\n  let as = renderAs;\n  if (dropdown && renderAs === 'a') {\n    as = 'span';\n  }\n  return (\n    <Element\n      {...props}\n      ref={ref}\n      renderAs={as}\n      className={classnames('navbar-item', className, {\n        'is-active': active,\n        'has-dropdown': dropdown,\n        'is-hoverable': hoverable,\n        'has-dropdown-up': dropdownUp,\n      })}\n    >\n      {children}\n    </Element>\n  );\n});\n\nNavbarItem.propTypes = {\n  ...modifiers.propTypes,\n  style: PropTypes.shape({}),\n  className: PropTypes.string,\n  active: PropTypes.bool,\n  dropdown: PropTypes.bool,\n  dropdownUp: PropTypes.bool,\n  hoverable: PropTypes.bool,\n  children: PropTypes.node,\n  renderAs: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n};\n\nNavbarItem.defaultProps = {\n  ...modifiers.defaultProps,\n  style: {},\n  className: '',\n  active: false,\n  children: null,\n  dropdown: false,\n  hoverable: false,\n  dropdownUp: false,\n  renderAs: 'a',\n};\n\nexport default NavbarItem;\n"],"file":"item.js"}