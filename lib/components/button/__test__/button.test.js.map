{"version":3,"sources":["../../../../src/components/button/__test__/button.test.js"],"names":["Link","to","children","propTypes","PropTypes","string","isRequired","node","describe","it","expect","Button","toMatchSnapshot","Group","component","renderer","create","toJSON","onClick","jest","fn","simulate","toHaveBeenCalledTimes","spy","spyOn","defaultProps","mockRestore","testRef","React","createRef","current","not","toBeNull"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport renderer from 'react-test-renderer';\nimport { mount, shallow } from 'enzyme';\nimport Button from '..';\n\nconst Link = ({\n  to,\n  children,\n}) => (\n  <a href={to}>\n    {children}\n  </a>\n);\n\nLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\ndescribe('Button component', () => {\n  it('Should exist', () => {\n    expect(Button).toMatchSnapshot();\n  });\n  it('Should expose Button Group', () => {\n    expect(Button.Group).toMatchSnapshot();\n  });\n  it('Should be a default Button', () => {\n    const component = renderer.create(<Button />);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should be an anchor button', () => {\n    const component = renderer.create(<Button renderAs=\"a\" href=\"https://github.com/couds/react-bulma-components\" />);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should be a Primary Button', () => {\n    const component = renderer.create(<Button color=\"primary\" />);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should be a Large Primary Button', () => {\n    const component = renderer.create(<Button color=\"primary\" size=\"large\" />);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should render as a static Button', () => {\n    const component = renderer.create(<Button isStatic color=\"primary\" />);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should render as a html button', () => {\n    const component = renderer.create(<Button renderAs=\"button\" color=\"danger\" />);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should render as a React element link with to prop', () => {\n    const component = renderer.create(\n      <Button renderAs={Link} to=\"http://google.com\" color=\"danger\">\n        TEST\n      </Button>);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should render be disabled', () => {\n    const component = renderer.create(<Button disabled />);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should be a submit form button', () => {\n    const component = renderer.create(<Button submit />);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should be a reset form button', () => {\n    const component = renderer.create(<Button reset />);\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n  it('Should have a Click listener', () => {\n    const onClick = jest.fn();\n    const component = shallow(<Button onClick={onClick} />);\n    component.simulate('click');\n    expect(onClick).toHaveBeenCalledTimes(1);\n  });\n  it('Should have no dispatch click handler if disabled', () => {\n    const onClick = jest.fn();\n    const component = shallow(<Button disabled onClick={onClick} />);\n    component.simulate('click');\n    expect(onClick).toHaveBeenCalledTimes(0);\n  });\n  it('Should have a call default onClick is no listener is set', () => {\n    const spy = jest.spyOn(Button.defaultProps, 'onClick');\n    const component = shallow(<Button />);\n    component.simulate('click');\n    component.simulate('click');\n    expect(spy).toHaveBeenCalledTimes(2);\n    Button.defaultProps.onClick.mockRestore();\n  });\n  it('Should forward ref', () => {\n    const testRef = React.createRef();\n    mount(<Button ref={testRef} />);\n    expect(testRef.current).not.toBeNull();\n  });\n  describe('Button Group component', () => {\n    it('Should be a default list of buttons', () => {\n      const component = renderer.create(\n        <Button.Group>\n          <Button>\n            test 0\n          </Button>\n          <Button>\n            test 1\n          </Button>\n        </Button.Group>,\n      );\n      expect(component).toMatchSnapshot();\n    });\n    it('Should concat class names in props with Bulma class name', () => {\n      const component = renderer.create(\n        <Button.Group className=\"super-class-1 dope-class-2\">\n          <Button>\n            test 0\n          </Button>\n          <Button>\n            test 1\n          </Button>\n        </Button.Group>,\n      );\n      expect(component.toJSON()).toMatchSnapshot();\n    });\n    it('Should group buttons together', () => {\n      const component = renderer.create(\n        <Button.Group hasAddons>\n          <Button>\n            test 1\n          </Button>\n          <Button>\n            test 2\n          </Button>\n        </Button.Group>,\n      );\n      expect(component.toJSON()).toMatchSnapshot();\n    });\n    it('Should be centered', () => {\n      const component = renderer.create(\n        <Button.Group position=\"centered\">\n          <Button>\n            test 0\n          </Button>\n          <Button>\n            test 1\n          </Button>\n        </Button.Group>,\n      );\n      expect(component.toJSON()).toMatchSnapshot();\n    });\n    it('Should align to the right', () => {\n      const component = renderer.create(\n        <Button.Group position=\"right\">\n          <Button>\n            test 0\n          </Button>\n          <Button>\n            test 1\n          </Button>\n        </Button.Group>,\n      );\n      expect(component.toJSON()).toMatchSnapshot();\n    });\n  });\n});\n"],"file":"button.test.js"}