{"version":3,"sources":["../../../src/modifiers/__test__/modifiers.test.js"],"names":["describe","test","expect","modifiers","classnames","clearfix","paddingless","toMatchSnapshot","textColor","textAlignment","italic","textTransform","textWeight","responsive","tablet","display","value","only","widescreen","hide","backgroundColor"],"mappings":";;AAAA;;;;AAEAA,QAAQ,CAAC,kBAAD,EAAqB,YAAM;AACjCC,EAAAA,IAAI,CAAC,8CAAD,EAAiD,YAAM;AACzDC,IAAAA,MAAM,CAACC,UAAUC,UAAV,CAAqB;AAC1BC,MAAAA,QAAQ,EAAE,IADgB;AAE1BC,MAAAA,WAAW,EAAE;AAFa,KAArB,CAAD,CAAN,CAGIC,eAHJ;AAID,GALG,CAAJ;AAOAN,EAAAA,IAAI,CAAC,0BAAD,EAA6B,YAAM;AACrCC,IAAAA,MAAM,CAACC,UAAUC,UAAV,CAAqB;AAC1BI,MAAAA,SAAS,EAAE,SADe;AAE1BC,MAAAA,aAAa,EAAE,UAFW;AAG1BC,MAAAA,MAAM,EAAE,IAHkB;AAI1BC,MAAAA,aAAa,EAAE,WAJW;AAK1BC,MAAAA,UAAU,EAAE;AALc,KAArB,CAAD,CAAN,CAMIL,eANJ;AAOD,GARG,CAAJ;AAUAN,EAAAA,IAAI,CAAC,uEAAD,EAA0E,YAAM;AAClFC,IAAAA,MAAM,CAACC,UAAUC,UAAV,CAAqB;AAC1BS,MAAAA,UAAU,EAAE;AACVC,QAAAA,MAAM,EAAE;AACNC,UAAAA,OAAO,EAAE;AACPC,YAAAA,KAAK,EAAE,MADA;AAEPC,YAAAA,IAAI,EAAE;AAFC;AADH,SADE;AAOVC,QAAAA,UAAU,EAAE;AACVH,UAAAA,OAAO,EAAE;AACPC,YAAAA,KAAK,EAAE;AADA;AADC;AAPF;AADc,KAArB,CAAD,CAAN,CAcIT,eAdJ;AAeD,GAhBG,CAAJ;AAkBAN,EAAAA,IAAI,CAAC,wDAAD,EAA2D,YAAM;AACnEC,IAAAA,MAAM,CAACC,UAAUC,UAAV,CAAqB;AAC1BS,MAAAA,UAAU,EAAE;AACVC,QAAAA,MAAM,EAAE;AACNK,UAAAA,IAAI,EAAE;AACJH,YAAAA,KAAK,EAAE,IADH;AAEJC,YAAAA,IAAI,EAAE;AAFF;AADA,SADE;AAOVC,QAAAA,UAAU,EAAE;AACVC,UAAAA,IAAI,EAAE;AACJH,YAAAA,KAAK,EAAE;AADH;AADI;AAPF;AADc,KAArB,CAAD,CAAN,CAcIT,eAdJ;AAeD,GAhBG,CAAJ;AAkBAN,EAAAA,IAAI,CAAC,4CAAD,EAA+C,YAAM;AACvDC,IAAAA,MAAM,CAACC,UAAUC,UAAV,CAAqB;AAC1BS,MAAAA,UAAU,EAAE;AACVC,QAAAA,MAAM,EAAE;AACNL,UAAAA,aAAa,EAAE;AACbO,YAAAA,KAAK,EAAE,UADM;AAEbC,YAAAA,IAAI,EAAE;AAFO;AADT,SADE;AAOVC,QAAAA,UAAU,EAAE;AACVT,UAAAA,aAAa,EAAE;AACbO,YAAAA,KAAK,EAAE;AADM;AADL;AAPF;AADc,KAArB,CAAD,CAAN,CAcIT,eAdJ;AAeD,GAhBG,CAAJ;AAkBAN,EAAAA,IAAI,CAAC,gCAAD,EAAmC,YAAM;AAC3CC,IAAAA,MAAM,CAACC,UAAUC,UAAV,CAAqB;AAC1BI,MAAAA,SAAS,EAAE;AADe,KAArB,CAAD,CAAN,CAEID,eAFJ;AAGD,GAJG,CAAJ;AAMAN,EAAAA,IAAI,CAAC,sCAAD,EAAyC,YAAM;AACjDC,IAAAA,MAAM,CAACC,UAAUC,UAAV,CAAqB;AAC1BgB,MAAAA,eAAe,EAAE;AADS,KAArB,CAAD,CAAN,CAEIb,eAFJ;AAGD,GAJG,CAAJ;AAKD,CAnFO,CAAR","sourcesContent":["import modifiers from '..';\n\ndescribe('Helper proptypes', () => {\n  test('Should have paddingless and clearfix classes', () => {\n    expect(modifiers.classnames({\n      clearfix: true,\n      paddingless: true,\n    })).toMatchSnapshot();\n  });\n\n  test('Should have text helpers', () => {\n    expect(modifiers.classnames({\n      textColor: 'success',\n      textAlignment: 'centered',\n      italic: true,\n      textTransform: 'uppercase',\n      textWeight: 'bold',\n    })).toMatchSnapshot();\n  });\n\n  test('Should have responsive modifier flex-tablet-only and block-widescreen', () => {\n    expect(modifiers.classnames({\n      responsive: {\n        tablet: {\n          display: {\n            value: 'flex',\n            only: true,\n          },\n        },\n        widescreen: {\n          display: {\n            value: 'block',\n          },\n        },\n      },\n    })).toMatchSnapshot();\n  });\n\n  test('Should have hidden modifier tablet-only and widescreen', () => {\n    expect(modifiers.classnames({\n      responsive: {\n        tablet: {\n          hide: {\n            value: true,\n            only: true,\n          },\n        },\n        widescreen: {\n          hide: {\n            value: true,\n          },\n        },\n      },\n    })).toMatchSnapshot();\n  });\n\n  test('Should have alignment responsive modifiers', () => {\n    expect(modifiers.classnames({\n      responsive: {\n        tablet: {\n          textAlignment: {\n            value: 'centered',\n            only: true,\n          },\n        },\n        widescreen: {\n          textAlignment: {\n            value: 'left',\n          },\n        },\n      },\n    })).toMatchSnapshot();\n  });\n\n  test('Should have text color success', () => {\n    expect(modifiers.classnames({\n      textColor: 'success',\n    })).toMatchSnapshot();\n  });\n\n  test('Should have background color success', () => {\n    expect(modifiers.classnames({\n      backgroundColor: 'success',\n    })).toMatchSnapshot();\n  });\n});\n"],"file":"modifiers.test.js"}